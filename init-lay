#!/usr/bin/php
<?php
// # Copy this script to where you can easily access or where you wish to always initialize you projects
// # To use this script, open your terminal or command line (cmd) and type `php init-lay`
// # Use; `php init-lay -h` for to see options available to you

$s = DIRECTORY_SEPARATOR;
$ag = $argv;

$default_ver = "1.0.0"; // change this to the latest version of Lay
$default_lay_location = "{$s}var{$s}www{$s}Lay"; // change this to the location of your Lay package
$overwrite_existing_project = false;

######           ######
###### Functions ######
######           ######

function intro($kill = false){
    print "----------------------------------------------------------\n";
    print "-- Name:     \t  Lay Project Initiator                    \n";
    print "-- Version:  \t  {$GLOBALS['default_ver']}                \n";
    print "-- Author:   \t  Osahenrumwen Aigbogun                    \n";
    print "-- Created:  \t  08/02/2022;                              \n";
    print "----------------------------------------------------------\n";
    if($kill) die;
};

function use_error($msg){
    print "####\n";
    print "# Error Encountered \n";
    print "# What happened? $msg\n";
    die;
};

function set_flag($index,&$version,&$location,&$overwrite){
    $ag = $GLOBALS['ag'];
    $flag = @$ag[$index + 1];
    switch (substr($ag[$index],0,2)) {
        default:break;
        case '-v': $version = $flag; break;
        case '-l': $location = $flag; break;
        case '-w': $overwrite = (bool) $flag; break;
    }
};

function recurseCopy(string $sourceDirectory, string $destinationDirectory, string $childFolder = ''){
    $dir = opendir($sourceDirectory);

    if (is_dir($destinationDirectory) === false) {
        mkdir($destinationDirectory);
    }

    if ($childFolder !== '') {
        if (is_dir("$destinationDirectory/$childFolder") === false) {
            mkdir("$destinationDirectory/$childFolder");
        }

        while (($file = readdir($dir)) !== false) {
            if ($file === '.' || $file === '..') {
                continue;
            }

            if (is_dir("$sourceDirectory/$file") === true) {
                recurseCopy("$sourceDirectory/$file", "$destinationDirectory/$childFolder/$file");
            } else {
                copy("$sourceDirectory/$file", "$destinationDirectory/$childFolder/$file");
            }
        }

        closedir($dir);

        return;
    }

    while (($file = readdir($dir)) !== false) {
        if ($file === '.' || $file === '..') {
            continue;
        }

        if (is_dir("$sourceDirectory/$file") === true) {
            recurseCopy("$sourceDirectory/$file", "$destinationDirectory/$file");
        }
        else {
            copy("$sourceDirectory/$file", "$destinationDirectory/$file");
        }
    }

    closedir($dir);
}

######                 ######
###### Start Execution ######
######                 ######

$script_name = "init-lay";

if(in_array(("--help"),$ag,true) || in_array(("-h"),$ag,true)){
    intro();
    print ">>> This is a quick way to initiate a project using Lay as the framework. This script should reside at the root folder \n";
    print "----------------------------------------------------------\n";
    print "### Usage: [$script_name] {PROJECT_LOCATION} -v {LAY_VERSION (optional)} -l {LAY_PACKAGE_LOCATION (optional)}\n";
    print "### Example: php $script_name clients/a-new-project -v 1.0.0 -l library/Lay\n";
    die;
}

if($argc == 1)
    intro(true);

if(substr($ag[1],0,1) == "-")
    use_error("Project location cannot start with '-', if you wish to bypass that, add a `forward slash (/) to it`");

for($i = 0; $i < $argc; $i++){
    set_flag($i,$default_ver,$default_lay_location, $overwrite_existing_project);
}

// start process
print "Project creation has been initiated\n";

$project_root = ltrim($ag[1],"/");
$lay = rtrim($default_lay_location,$s) . $s;

if(is_dir($project_root) and $overwrite_existing_project === false)
    use_error("You are trying to create an existing project, delete the folder and try again, or change the name");

$mkdir = function (string $dir, ?string $s_name = null, ?string $t_name = null) use ($project_root,$lay,$s) {
    $dir = $project_root . $s . $dir;
    if($s_name && $t_name)
        return copy($lay . $s_name, $dir . $s . $t_name);

    umask(0);
    if(!is_dir($dir) && @!mkdir($dir, 0775, true))
        use_error("Failed to create directory on location: ($dir); access denied; modify permissions and try again");
};

$routine = function (string $locale, ?string $source = null, ?string $target = null) use ($mkdir, $s) {
    $mkdir($locale);
    if($source)
        $mkdir($locale,"default-files" . $s . $source, $target ?? $source);
};

$routine("api","api-index.php","index.php");
$routine("res{$s}server{$s}model{$s}__front");
$routine("res{$s}server{$s}model{$s}__back");

$dir = "res{$s}server{$s}includes$s";
$routine($dir,"connection.inc");

$section = "__front";
$routine($dir . "$section","body.inc");
$routine($dir . "$section","head.inc");
$routine($dir . "$section","script.inc");


$section = "__back";
$routine($dir . "$section","body.inc");
$routine($dir . "$section","head.inc");
$routine($dir . "$section","script.inc");


$mkdir("res{$s}server{$s}view{$s}__front");
$mkdir("res{$s}server{$s}view{$s}__back");

$mkdir("res{$s}server{$s}controller{$s}__front");
$mkdir("res{$s}server{$s}controller{$s}__back");

$mkdir("res{$s}client{$s}dev{$s}front");
$mkdir("res{$s}client{$s}dev{$s}back");

$dir = "res{$s}client{$s}dev{$s}custom{$s}";
$mkdir($dir . "css");
$mkdir($dir . "js");
$mkdir($dir . "images");
$mkdir($dir . "plugin");

recurseCopy($lay . $default_ver,$project_root . $s . "Lay");
$mkdir("", "default-files{$s}bob_d_builder.php", "bob_d_builder.php");
$mkdir("", "default-files{$s}index.php", "index.php");
$mkdir("", "default-files{$s}layconfig.php", "layconfig.php");
$mkdir("", "default-files{$s}htaccess", ".htaccess");
$mkdir("", "default-files{$s}homepage.view", "res{$s}server{$s}view{$s}__front${s}homepage.view");
$mkdir("", "default-files{$s}error.view", "res{$s}server{$s}view{$s}__front${s}error.view");
$mkdir("", "default-files{$s}homepage.view", "res{$s}server{$s}view{$s}__back${s}homepage.view");
$mkdir("", "default-files{$s}error.view", "res{$s}server{$s}view{$s}__back${s}error.view");

print "Project creation complete\n";